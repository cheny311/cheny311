body, html {
    height: 100%;
    margin: 0;
    font-family: Arial, sans-serif;
}

.grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 10px;
    padding: 10px;
}

.button-container {
    margin-bottom: 30px;
    position: relative;
    width: 100%;
    height: auto;
    margin-top: 50px; /* Add space above the button */
    display: flex;
    justify-content: center; /* Center the button horizontally */
  }
  .button-container {
    text-align: center; /* Center the button horizontally */
    margin-top: 20px; /* Add space above the button */
  }
  .button {
    --b: 2px;           /* Border thickness */
    --s: 0.5em;         /* Padding size */
    --color: #82867f;
    /* --color: #88ff00;   Primary line color (green) */
    --hover-color: #fc01b1; /* Hover line color (pink) */
    --active-color: #fc0101; /* Active line color (red) */
  
    padding: var(--s) calc(var(--s) * 2);
    color: var(--color); /* Initial text color */
    border: var(--b) solid var(--color); /* Initial border color */
    border-radius: 5px; /* Slightly rounded corners */
    background: none; /* Transparent background */
    font-size: 16px;
    font-weight: bold;
    text-transform: uppercase;
    cursor: pointer;
    position: relative; /* Needed for pseudo-elements */
    transition: all 0.3s ease-in-out;
    overflow: hidden;
  }
  
  .button::before,
  .button::after {
    content: '';
    position: absolute;
    height: var(--b); /* Same as border thickness */
    width: 100%;
    background: var(--hover-color); /* Hover line color */
    top: 0;
    left: -100%; /* Initially off the button */
    transition: all 0.3s ease-in-out;
  }
  
  .button::after {
    top: auto; /* Position at the bottom */
    bottom: 0;
    left: 100%; /* Initially off the button */
  }
  
  .button:hover::before {
    left: 0; /* Slide the top line in */
  }
  
  .button:hover::after {
    left: 0; /* Slide the bottom line in */
  }
  
  .button:hover {
    color: var(--hover-color); /* Change text color to hover color */
    border-color: var(--hover-color); /* Change border color to hover color */
  }
  
  .button:active {
    color: white; /* White text on active */
    background: var(--active-color); /* Active background color */
    border-color: var(--active-color); /* Match border to active background */
  }
  

  .grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* Adjust the minmax values based on your preference */
    gap: 20px; /* Space between grid items */
    align-items: start; /* Aligns items at the start of each cell */
}

.grid-item {
    width: 100%; /* Ensures all grid items take full width of their cell */
    height: auto; /* Keeps the original aspect ratio for images */
    object-fit: cover; /* Ensures videos and images cover the area without stretching */
}

.grid-item video {
    width: 100%; /* Full width of the grid cell */
    height: 100%; /* Optional: set a specific height if needed */
}


.nested-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr); /* 可根据需要调整列数 */
    gap: 5px;
}

.grid-item, .nested-item {
    width: 100%;
    transition: transform 0.5s ease;
}

.grid-item:hover, .nested-item:hover {
    transform: scale(1.1);
    cursor: pointer;
}
.grid-item:hover {
    transform: scale(1.1);
    cursor: pointer;
}

@media (max-width: 600px) {
    .grid {
        grid-template-columns: 1fr;
    }
    .nested-grid {
        grid-template-columns: 1fr; /* 移动端时显示一列 */
    }
}